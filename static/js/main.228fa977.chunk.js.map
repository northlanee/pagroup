{"version":3,"sources":["components/Dropdown/Dropdown.tsx","App.tsx","index.tsx"],"names":["Dropdown","elements","defaultText","dropdownHandler","React","useState","isOpened","setIsOpened","map","item","index","id","selected","listItems","_setListItems","selectedMenuItem","_setSelectedMenuItem","useEffect","document","body","addEventListener","keyboardHandler","removeEventListener","selectedMenuItemRef","useRef","listItemsRef","setSelectedMenuItem","current","getNearestUnselectedElementId","direction","step","unselectedItems","filter","el","currentItemIndex","findIndex","e","code","length","changeItemSelecting","currentId","items","listItemsCopy","selectElementHandler","stopPropagation","dropdownElementsJSX","key","onClick","onMouseOver","className","cn","selectedElementsJSX","inputFieldContentJSX","opened","App","selectedElements","setSelectedElements","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.228fa977.chunk.js","sourcesContent":["import React, { FC, ReactElement } from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nimport \"./Dropdown.styles.scss\";\r\n\r\ntype PropTypes = {\r\n  elements: string[];\r\n  defaultText: string;\r\n  dropdownHandler: (elements: string[]) => void;\r\n};\r\n\r\ntype ListElement = {\r\n  id: number;\r\n  item: string;\r\n  selected: boolean;\r\n};\r\n\r\nconst Dropdown: FC<PropTypes> = ({\r\n  elements,\r\n  defaultText,\r\n  dropdownHandler,\r\n}: PropTypes): ReactElement => {\r\n  const [isOpened, setIsOpened] = React.useState<boolean>(false);\r\n  const [listItems, _setListItems] = React.useState<ListElement[]>(\r\n    elements.map((item, index) => ({ id: index, item, selected: false }))\r\n  );\r\n  const [selectedMenuItem, _setSelectedMenuItem] = React.useState<\r\n    number | null\r\n  >(null);\r\n\r\n  React.useEffect(() => {\r\n    document.body.addEventListener(\"keydown\", keyboardHandler);\r\n    return () => document.body.removeEventListener(\"keydown\", keyboardHandler);\r\n  }, []);\r\n\r\n  const selectedMenuItemRef = React.useRef(selectedMenuItem);\r\n  const listItemsRef = React.useRef(listItems);\r\n\r\n  const setSelectedMenuItem = (id: number) => {\r\n    selectedMenuItemRef.current = id;\r\n    _setSelectedMenuItem(id);\r\n  };\r\n\r\n  const setListItems = (items: ListElement[]) => {\r\n    listItemsRef.current = items;\r\n    _setListItems(items);\r\n  };\r\n\r\n  const getNearestUnselectedElementId = (direction: \"up\" | \"down\") => {\r\n    let step = 0;\r\n    if (direction === \"up\") step = -1;\r\n    if (direction === \"down\") step = 1;\r\n    const unselectedItems = listItemsRef.current.filter((el) => {\r\n      return !el.selected;\r\n    });\r\n    const currentItemIndex = unselectedItems.findIndex(\r\n      (el) => el.id === selectedMenuItemRef.current\r\n    );\r\n    return unselectedItems[currentItemIndex + step].id;\r\n  };\r\n\r\n  const keyboardHandler = (e: KeyboardEvent) => {\r\n    if (e.code === \"Escape\") setIsOpened(false);\r\n\r\n    if (e.code === \"ArrowDown\") {\r\n      if (selectedMenuItemRef.current === null) {\r\n        setSelectedMenuItem(0);\r\n      } else if (selectedMenuItemRef.current < listItems.length - 1) {\r\n        setSelectedMenuItem(getNearestUnselectedElementId(\"down\"));\r\n      }\r\n    }\r\n\r\n    if (e.code === \"ArrowUp\") {\r\n      if (selectedMenuItemRef.current === null) {\r\n        setSelectedMenuItem(listItems.length - 1);\r\n      } else if (selectedMenuItemRef.current > 0) {\r\n        setSelectedMenuItem(getNearestUnselectedElementId(\"up\"));\r\n      }\r\n    }\r\n  };\r\n\r\n  const changeItemSelecting = (selected: boolean, currentId: number) => {\r\n    const listItemsCopy = listItems.map((el) => {\r\n      if (el.id === currentId) return { ...el, selected };\r\n      else return el;\r\n    });\r\n    setListItems(listItemsCopy);\r\n    dropdownHandler(\r\n      listItemsCopy.filter((el) => el.selected).map((el) => el.item)\r\n    );\r\n  };\r\n\r\n  const selectElementHandler = () => {\r\n    if (selectedMenuItem !== null) {\r\n      changeItemSelecting(true, selectedMenuItem);\r\n      setSelectedMenuItem(selectedMenuItem + 1);\r\n    }\r\n  };\r\n\r\n  const unSelectElementHandler = (id: number) => {\r\n    changeItemSelecting(false, id);\r\n  };\r\n\r\n  const onMouseOverSelect = (id: number) => {\r\n    setSelectedMenuItem(id);\r\n  };\r\n\r\n  const stopPropagation = (e: React.MouseEvent<HTMLLIElement>) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const toggleDropdownHandler = () => {\r\n    setIsOpened(!isOpened);\r\n  };\r\n\r\n  const dropdownElementsJSX = listItems\r\n    .filter((el) => !el.selected)\r\n    .map(\r\n      (el, index): ReactElement => {\r\n        return (\r\n          <div\r\n            key={`${el.item}_${index}`}\r\n            onClick={selectElementHandler}\r\n            onMouseOver={() => onMouseOverSelect(el.id)}\r\n            className={cn(\"menu-element\", {\r\n              selected: el.id === selectedMenuItem,\r\n            })}\r\n          >\r\n            {el.item}\r\n          </div>\r\n        );\r\n      }\r\n    );\r\n\r\n  const selectedElementsJSX = listItems\r\n    .filter((el) => el.selected)\r\n    .map((el, index) => {\r\n      return (\r\n        <li\r\n          className=\"selectedItem\"\r\n          key={`${el.item}_${index}`}\r\n          onClick={stopPropagation}\r\n        >\r\n          <div>{el.item}</div>\r\n          <div\r\n            className=\"remove\"\r\n            onClick={() => unSelectElementHandler(el.id)}\r\n          ></div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n  const inputFieldContentJSX =\r\n    selectedElementsJSX.length === 0 ? (\r\n      <div className=\"defaultText\">{defaultText}</div>\r\n    ) : (\r\n      <ul className=\"selectedItemsList\">{selectedElementsJSX}</ul>\r\n    );\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <div className=\"inputField\" onClick={toggleDropdownHandler}>\r\n        {inputFieldContentJSX}\r\n        <div className=\"iconContainer\">\r\n          <i className={cn(\"arrow\", { opened: isOpened })}></i>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={cn(\"menu\", {\r\n          opened: isOpened && dropdownElementsJSX.length !== 0,\r\n        })}\r\n      >\r\n        {dropdownElementsJSX}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { FC, ReactElement } from \"react\";\n\nimport { Dropdown } from \"./components\";\n\nimport \"./App.css\";\n\nconst elements = [\n  \"Element 1\",\n  \"Element 2\",\n  \"Element 3\",\n  \"Element 4\",\n  \"Element 5\",\n  \"Element 6\",\n  \"Element 7\",\n];\n\nconst App: FC = (): ReactElement => {\n  const [selectedElements, setSelectedElements] = React.useState<string[]>([]);\n\n  const changeElementsHandler = (elements: string[]) => {\n    setSelectedElements(elements);\n  };\n\n  const selectedElementsJSX =\n    selectedElements.length === 0 ? (\n      <div className=\"noElements\">No selected elements</div>\n    ) : (\n      selectedElements.map((el) => (\n        <div className=\"list-element\" key={el}>\n          {el}\n        </div>\n      ))\n    );\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h2>Dropdown:</h2>\n        <Dropdown\n          elements={elements}\n          defaultText=\"Default text\"\n          dropdownHandler={changeElementsHandler}\n        />\n      </div>\n      <div className=\"elements\">\n        <h2>Selected Elements:</h2>\n        {selectedElementsJSX}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}